name: Test constexpr
on: [push, pull_request]

jobs:
  build:
    name: Test constexpr on ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    env:
      CC: ${{ matrix.config.cc }}
      CXX: ${{ matrix.config.cxx }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows MSVC",
            os: windows-latest,
            cc: "", cxx: "",
          }
        - {
            name: "Ubuntu GCC",
            os: ubuntu-latest,
            cc: "gcc", cxx: "g++"
          }
        - {
            name: "Ubuntu Clang",
            os: ubuntu-latest,
            cc: "clang", cxx: "clang++"
          }

    steps:
      - name: Show job info
        run: |
          echo "The job was automatically triggered by a ${{ github.event_name }} event."
          echo "This job is now running on a ${{ runner.os }} server."
          echo "Current branch is ${{ github.ref }}."

      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install dependencies on windows
        if: startsWith(matrix.config.os, 'Windows')
        run: |
          choco install ninja cmake
          ninja --version
          cmake --version
          gcc --version

      - name: Install dependencies on ubuntu
        if: startsWith(matrix.config.name, 'Ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build cmake
          ninja --version
          cmake --version
          gcc --version
          clang --version

      - run: ls

      - name: Configure CMake
        shell: bash
        run: |
          mkdir build
          cmake \
            -S . \
            -B build \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_CXX_STANDARD=20 \
            -DBUILD_TESTS=ON

      - name: Build
        shell: bash
        run: |
          cmake --build build \
            --config Debug \
            --target imath_lib_tests_constexpr

      - name: Test
        shell: bash
        run: |
          cd build
          ctest \
            -C Debug \
            -E ".*NOT_BUILT.*" \
            --output-on-failure
